RUN: mkrepo %t-up.a
RUN: mkrepo %t-up.b
RUN: env ct=1550000001 mkblob %t-up.a 1
RUN: env ct=1550000002 mkblob %t-up.b 2

RUN: mkrepo %t-down.a
RUN: mkrepo %t-down.b
RUN: git -C %t-down.a remote add upstream %t-up.a
RUN: git -C %t-down.b remote add upstream %t-up.b
RUN: git -C %t-down.a remote update
RUN: git -C %t-down.b remote update
RUN: git -C %t-down.a checkout -b fork upstream/master
RUN: git -C %t-down.b checkout -b fork upstream/master
RUN: git -C %t-down.a symbolic-ref HEAD refs/heads/fork
RUN: git -C %t-down.b symbolic-ref HEAD refs/heads/fork
RUN: env ct=1550000003 mkblob %t-down.b 3
RUN: env ct=1550000004 mkblob %t-down.a 4

RUN: mkrepo %t-cask.a
RUN: git -C %t-cask.a remote add upstream %t-up.a
RUN: git -C %t-cask.a remote add fork %t-down.a
RUN: git -C %t-cask.a remote update
RUN: git -C %t-cask.a checkout -b internal fork/fork
RUN: git -C %t-cask.a symbolic-ref HEAD refs/heads/internal
RUN: env ct=1550000005 mkblob %t-cask.a 5

RUN: mkrepo --bare %t-up.split
RUN: mkrepo --bare %t-up.mono
RUN: mkrepo --bare %t-down.split
RUN: mkrepo --bare %t-down.mono
RUN: mkrepo --bare %t-cask.split
RUN: mkrepo --bare %t-cask.mono
RUN: rm -rf %t-mt-configs %t-mt-up.git %t-mt-down.git %t-mt-cask.git
RUN: mkdir -p %t-mt-configs
RUN: cat         %S/Inputs/upstream.mt-config.in   | sed -e 's,%%t,%t,' \
RUN:   | tee %t-mt-configs/upstream.mt-config
RUN: cat         %S/Inputs/downstream.mt-config.in | sed -e 's,%%t,%t,' \
RUN:   | tee %t-mt-configs/downstream.mt-config
RUN: cat         %S/Inputs/cascade.mt-config.in | sed -e 's,%%t,%t,' \
RUN:   | tee %t-mt-configs/cascade.mt-config

# Generate the cascade.
RUN: %mtgen --git-dir %t-mt-up.git --config-dir %t-mt-configs \
RUN:     upstream
RUN: %mtgen --git-dir %t-mt-down.git --config-dir %t-mt-configs \
RUN:     downstream
RUN: %mtgen --git-dir %t-mt-cask.git --config-dir %t-mt-configs \
RUN:     cascade

# Add new commits to upstream and confirm cascade refuses to generate.  This
# intentionally bypasses downstream so that the test confirms that the order of
# the cascade is enforced even when the commit graph skips a level.
RUN: env ct=1550000006 mkblob %t-up.a 6
RUN: git -C %t-cask.a remote update
RUN: env ct=1550000007 mkmerge %t-cask.a 7 upstream/master
RUN: not %mtgen --git-dir %t-mt-cask.git --config-dir %t-mt-configs \
RUN:     cascade 2>&1 | grep error: | check-diff %s UPSTREAM %t
UPSTREAM: error: too many retries for --sync-destinations, giving up
UPSTREAM: error: upstream 'upstream'   out-of-date
UPSTREAM: error: upstream 'downstream' out-of-date

# Updating upstream is not sufficient, downstream needs to be updated too.
RUN: %mtgen --git-dir %t-mt-up.git --config-dir %t-mt-configs \
RUN:     upstream
RUN: not %mtgen --git-dir %t-mt-cask.git --config-dir %t-mt-configs \
RUN:     cascade 2>&1 | grep error: | check-diff %s DOWNSTREAM %t
DOWNSTREAM: error: too many retries for --sync-destinations, giving up
DOWNSTREAM: error: upstream 'downstream' out-of-date

# Now it's safe.
RUN: %mtgen --git-dir %t-mt-down.git --config-dir %t-mt-configs \
RUN:     downstream
RUN: %mtgen --git-dir %t-mt-cask.git --config-dir %t-mt-configs \
RUN:     cascade
